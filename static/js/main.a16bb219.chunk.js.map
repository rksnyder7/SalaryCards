{"version":3,"sources":["Utils/packersSunburst2017.csv","Utils/packersSunburst2018.csv","Utils/packers.csv","Utils/bears.csv","Utils/chargers.csv","Homepage.js","Sunburst.js","Chart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Homepage","react_default","a","createElement","className","onClick","this","props","onRouteChange","bind","src","alt","Component","Sunburst","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createSun","year","year1","width","radius","Math","min","console","log","b","w","h","s","t","colors","Offense","Defense","Special Teams","K","P","LS","Wide Outs","WR","TE","Offensive Line","LT","RT","C","G","T","Quarterback","QB","Halfbacks","RB","FB","Defensive Line","DT","DE","Secondary","S","FS","SS","CB","Linebackers","OLB","ILB","totalSize","vis","d3","append","attr","partition","size","PI","arc","startAngle","d","x0","endAngle","x1","innerRadius","sqrt","y0","outerRadius","y1","sourceFile","packersSunburst2017","packersSunburst2018","selectFile","mouseover","percentage","value","toPrecision","percentageString","text","style","sequenceArray","ancestors","reverse","shift","nodeArray","trail","selectAll","data","name","depth","exit","remove","entering","enter","breadcrumbPoints","merge","i","select","length","updateBreadcrumbs","filter","node","indexOf","mouseleave","on","transition","duration","points","push","join","toggleLegend","legend","then","json","li","r","g","key","drawLegend","root","sum","sort","nodes","descendants","path","datum","createVisualization","csv","children","sequence","isNaN","parts","split","currentNode","j","childNode","nodeName","foundChild","k","buildHierarchy","id","type","Chart","createChart","svg","margin","height","rangeRound","paddingInner","padding","y","z","range","teamRef","packers","bears","chargers","team","columns","n","keys","slice","domain","map","Year","bandwidth","nice","ticks","pop","filtered","splice","newKeys","forEach","bars","update","onBack","App","_this","parameter","event","setState","route","onYearChange","state","displayPage","src_Homepage","src_Chart","src_Sunburst","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a16bb219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/packersSunburst2017.6d2079f1.csv\";","module.exports = __webpack_public_path__ + \"static/media/packersSunburst2018.e471ad70.csv\";","module.exports = __webpack_public_path__ + \"static/media/packers.82f61d91.csv\";","module.exports = __webpack_public_path__ + \"static/media/bears.8e73b155.csv\";","module.exports = __webpack_public_path__ + \"static/media/chargers.287d413a.csv\";","import React, { Component } from 'react';\r\n\r\nclass Homepage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t        <div className=\"container\">\r\n\t          <div className=\"row\">\r\n\t            <p className=\"black b f-headline-ns tc db mb3 mb4-ns center\">NFL Salaries</p>\r\n\t          </div>\r\n\t          <div className=\"row\">\r\n\t            <div onClick= {this.props.onRouteChange.bind(this, \"packers\")} className=\"col-sm-4\">\r\n\t                <img className=\"card-img-top img-fluid\" src=\"https://a.espncdn.com/i/teamlogos/nfl/500/gb.png\" alt=''></img>\r\n\t                <div className=\"card-body\">\r\n\t                  <h5 className=\"card-title\">Packers</h5>\r\n\t                  <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n\t                  <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t                </div>\r\n\t            </div>\r\n\t            <div onClick= {this.props.onRouteChange.bind(this, \"chargers\")} className=\"col-sm-4\">\r\n\t                <img className=\"card-img-top img-fluid\" src=\"https://a.espncdn.com/i/teamlogos/nfl/500/lac.png\" alt=''></img>\r\n\t                <div className=\"card-body\">\r\n\t                  <h5 className=\"card-title\">Chargers</h5>\r\n\t                  <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n\t                  <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t                </div>\r\n\t            </div>\r\n\t            <div onClick= {this.props.onRouteChange.bind(this, \"bears\")} className=\"col-sm-4\">\r\n\t                <img className=\"card-img-top img-fluid\" src=\"https://a.espncdn.com/i/teamlogos/nfl/500/chi.png\" alt=''></img>\r\n\t                <div className=\"card-body\">\r\n\t                  <h5 className=\"card-title\">Bears</h5>\r\n\t                  <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n\t                  <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t                </div>\r\n\t            </div>\r\n\t          </div>\r\n\t        </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Homepage;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport packersSunburst2017 from './Utils/packersSunburst2017.csv';\r\nimport packersSunburst2018 from './Utils/packersSunburst2018.csv';\r\n\r\nclass Sunburst extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.createSun(this.props.year);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.createSun(this.props.year)\r\n\t}\r\n\r\n\tcreateSun(year1) {\r\n\t\t\t// Dimensions of sunburst.\r\n\t\t\tvar width = 750;\r\n\t\t\tvar height = 600;\r\n\t\t\tvar radius = Math.min(width, height) / 2;\r\n\t\t\tconsole.log(year1)\r\n\t\t\t// Breadcrumb dimensions: width, height, spacing, width of tip/tail.\r\n\t\t\tvar b = {\r\n\t\t\t  w: 75, h: 30, s: 3, t: 10\r\n\t\t\t};\r\n\r\n\t\t\t// Mapping of step names to colors.\r\n\t\t\tvar colors = {\r\n\t\t\t  \"Offense\": \"#AA5139\",\r\n\t\t\t  \"Defense\": \"#2A4D6E\",\r\n\t\t\t  \"Special Teams\": \"#AA9439\",\r\n\t\t\t  \"K\": \"#D4C06A\",\r\n\t\t\t  \"P\": \"#FFEEAA\",\r\n\t\t\t  \"LS\": \"#806B16\",\r\n\t\t\t  \"Wide Outs\": \"#551200\",\r\n\t\t\t  \"WR\": \"#7D2913\",\r\n\t\t\t  \"TE\": \"#AA5139\",\r\n\t\t\t  \"Offensive Line\": \"#802C16\",\r\n\t\t\t  \"LT\": \"#AA5139\",\r\n\t\t\t  \"RT\": \"#AA5139\",\r\n\t\t\t  \"C\": \"#AA5139\",\r\n\t\t\t  \"G\": \"#AA5139\",\r\n\t\t\t  \"T\": \"#AA5139\",\r\n\t\t\t  \"Quarterback\": \"#D4806A\",\r\n\t\t\t  \"QB\": \"#D4806A\",\r\n\t\t\t  \"Halfbacks\": \"#FFBCAA\",\r\n\t\t\t  \"RB\": \"#FFBCAA\",\r\n\t\t\t  \"FB\": \"#FFBCAA\",\r\n\t\t\t  \"Defensive Line\": \"#496A89\",\r\n\t\t\t  \"DT\": \"#496A89\",\r\n\t\t\t  \"DE\": \"#496A89\",\r\n\t\t\t  \"Secondary\": \"#728CA5\",\r\n\t\t\t  \"S\": \"#728CA5\",\r\n\t\t\t  \"FS\": \"#728CA5\",\r\n\t\t\t  \"SS\": \"#728CA5\",\r\n\t\t\t  \"CB\": \"#728CA5\",\r\n\t\t\t  \"Linebackers\": \"#133352\",\r\n\t\t\t  \"OLB\": \"#133352\",\r\n\t\t\t  \"ILB\": \"#133352\"\r\n\t\t\t};\r\n\r\n\t\t\t// Total size of all segments; we set this later, after loading the data.\r\n\t\t\tvar totalSize = 0; \r\n\r\n\t\t\tvar vis = d3.select(\"#chart\").append(\"svg:svg\")\r\n\t\t\t    .attr(\"width\", width)\r\n\t\t\t    .attr(\"height\", height)\r\n\t\t\t    .append(\"svg:g\")\r\n\t\t\t    .attr(\"id\", \"container\")\r\n\t\t\t    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n\t\t\tvar partition = d3.partition()\r\n\t\t\t    .size([2 * Math.PI, radius * radius]);\r\n\r\n\t\t\tvar arc = d3.arc()\r\n\t\t\t    .startAngle(function(d) { return d.x0; })\r\n\t\t\t    .endAngle(function(d) { return d.x1; })\r\n\t\t\t    .innerRadius(function(d) { return Math.sqrt(d.y0); })\r\n\t\t\t    .outerRadius(function(d) { return Math.sqrt(d.y1); });\r\n\r\n\t\t\t// Use d3.text and d3.csvParseRows so that we do not need to have a header\r\n\t\t\t// row, and can receive the csv as an array of arrays.\r\n\t\t\tvar sourceFile = [packersSunburst2017, packersSunburst2018]\r\n\t\t\tvar selectFile = 0\r\n\r\n\t\t\tif (year1 == \"2017\") {\r\n\t\t\t\tconsole.log(\"Yesssss\")\r\n\t\t\t\tselectFile = 0\r\n\t\t\t} else {\r\n\t\t\t\tselectFile = 1\r\n\t\t\t}\r\n\t\t\tconsole.log(selectFile)\r\n\r\n\t\t\td3.text(sourceFile[selectFile]).then(function(text) {\r\n\t\t\t  var csv = d3.csvParseRows(text);\r\n\t\t\t  var json = buildHierarchy(csv);\r\n\t\t\t  createVisualization(json);\r\n\t\t\t});\r\n\r\n\t\t\t// Main function to draw and set up the visualization, once we have the data.\r\n\t\t\tfunction createVisualization(json) {\r\n\r\n\t\t\t  // Basic setup of page elements.\r\n\t\t\t  initializeBreadcrumbTrail();\r\n\t\t\t  drawLegend();\r\n\t\t\t  d3.select(\"#togglelegend\").on(\"click\", toggleLegend);\r\n\r\n\t\t\t  // Bounding circle underneath the sunburst, to make it easier to detect\r\n\t\t\t  // when the mouse leaves the parent g.\r\n\t\t\t  vis.append(\"svg:circle\")\r\n\t\t\t      .attr(\"r\", radius)\r\n\t\t\t      .style(\"opacity\", 0);\r\n\r\n\t\t\t  // Turn the data into a d3 hierarchy and calculate the sums.\r\n\t\t\t  var root = d3.hierarchy(json)\r\n\t\t\t      .sum(function(d) { return d.size; })\r\n\t\t\t      .sort(function(a, b) { return b.value - a.value; });\r\n\t\t\t  \r\n\t\t\t  // For efficiency, filter nodes to keep only those large enough to see.\r\n\t\t\t  var nodes = partition(root).descendants()\r\n\t\t\t      .filter(function(d) {\r\n\t\t\t          return (d.x1 - d.x0 > 0.005); // 0.005 radians = 0.29 degrees\r\n\t\t\t      });\r\n\r\n\t\t\t  var path = vis.data([json]).selectAll(\"path\")\r\n\t\t\t      .data(nodes)\r\n\t\t\t      .enter().append(\"svg:path\")\r\n\t\t\t      .attr(\"display\", function(d) { return d.depth ? null : \"none\"; })\r\n\t\t\t      .attr(\"d\", arc)\r\n\t\t\t      .attr(\"fill-rule\", \"evenodd\")\r\n\t\t\t      .style(\"fill\", function(d) { return colors[d.data.name]; })\r\n\t\t\t      .style(\"opacity\", 1)\r\n\t\t\t      .on(\"mouseover\", mouseover);\r\n\r\n\t\t\t  // Add the mouseleave handler to the bounding circle.\r\n\t\t\t  d3.select(\"#container\").on(\"mouseleave\", mouseleave);\r\n\r\n\t\t\t  // Get total size of the tree = value of root node from partition.\r\n\t\t\t  totalSize = path.datum().value;\r\n\t\t\t };\r\n\r\n\t\t\t// Fade all but the current sequence, and show it in the breadcrumb trail.\r\n\t\t\tfunction mouseover(d) {\r\n\r\n\t\t\t  var percentage = (100 * d.value / totalSize).toPrecision(3);\r\n\t\t\t  var percentageString = percentage + \"%\";\r\n\t\t\t  if (percentage < 0.1) {\r\n\t\t\t    percentageString = \"< 0.1%\";\r\n\t\t\t  }\r\n\r\n\t\t\t  d3.select(\"#percentage\")\r\n\t\t\t      .text(percentageString);\r\n\r\n\t\t\t  d3.select(\"#explanation\")\r\n\t\t\t      .style(\"visibility\", \"\");\r\n\r\n\t\t\t  var sequenceArray = d.ancestors().reverse();\r\n\t\t\t  sequenceArray.shift(); // remove root node from the array\r\n\t\t\t  updateBreadcrumbs(sequenceArray, percentageString);\r\n\r\n\t\t\t  // Fade all the segments.\r\n\t\t\t  d3.selectAll(\"path\")\r\n\t\t\t      .style(\"opacity\", 0.3);\r\n\r\n\t\t\t  // Then highlight only those that are an ancestor of the current segment.\r\n\t\t\t  vis.selectAll(\"path\")\r\n\t\t\t      .filter(function(node) {\r\n\t\t\t                return (sequenceArray.indexOf(node) >= 0);\r\n\t\t\t              })\r\n\t\t\t      .style(\"opacity\", 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Restore everything to full opacity when moving off the visualization.\r\n\t\t\tfunction mouseleave(d) {\r\n\r\n\t\t\t  // Hide the breadcrumb trail\r\n\t\t\t  d3.select(\"#trail\")\r\n\t\t\t      .style(\"visibility\", \"hidden\");\r\n\r\n\t\t\t  // Deactivate all segments during transition.\r\n\t\t\t  d3.selectAll(\"path\").on(\"mouseover\", null);\r\n\r\n\t\t\t  // Transition each segment to full opacity and then reactivate it.\r\n\t\t\t  d3.selectAll(\"path\")\r\n\t\t\t      .transition()\r\n\t\t\t      .duration(1000)\r\n\t\t\t      .style(\"opacity\", 1)\r\n\t\t\t      .on(\"end\", function() {\r\n\t\t\t              d3.select(this).on(\"mouseover\", mouseover);\r\n\t\t\t            });\r\n\r\n\t\t\t  d3.select(\"#explanation\")\r\n\t\t\t      .style(\"visibility\", \"hidden\");\r\n\t\t\t}\r\n\r\n\t\t\tfunction initializeBreadcrumbTrail() {\r\n\t\t\t  // Add the svg area.\r\n\t\t\t  var trail = d3.select(\"#sequence\").append(\"svg:svg\")\r\n\t\t\t      .attr(\"width\", width)\r\n\t\t\t      .attr(\"height\", 50)\r\n\t\t\t      .attr(\"id\", \"trail\");\r\n\t\t\t  // Add the label at the end, for the percentage.\r\n\t\t\t  trail.append(\"svg:text\")\r\n\t\t\t    .attr(\"id\", \"endlabel\")\r\n\t\t\t    .style(\"fill\", \"#000\");\r\n\t\t\t}\r\n\r\n\t\t\t// Generate a string that describes the points of a breadcrumb polygon.\r\n\t\t\tfunction breadcrumbPoints(d, i) {\r\n\t\t\t  var points = [];\r\n\t\t\t  points.push(\"0,0\");\r\n\t\t\t  points.push(b.w + \",0\");\r\n\t\t\t  points.push(b.w + b.t + \",\" + (b.h / 2));\r\n\t\t\t  points.push(b.w + \",\" + b.h);\r\n\t\t\t  points.push(\"0,\" + b.h);\r\n\t\t\t  if (i > 0) { // Leftmost breadcrumb; don't include 6th vertex.\r\n\t\t\t    points.push(b.t + \",\" + (b.h / 2));\r\n\t\t\t  }\r\n\t\t\t  return points.join(\" \");\r\n\t\t\t}\r\n\r\n\t\t\t// Update the breadcrumb trail to show the current sequence and percentage.\r\n\t\t\tfunction updateBreadcrumbs(nodeArray, percentageString) {\r\n\r\n\t\t\t  // Data join; key function combines name and depth (= position in sequence).\r\n\t\t\t  var trail = d3.select(\"#trail\")\r\n\t\t\t      .selectAll(\"g\")\r\n\t\t\t      .data(nodeArray, function(d) { return d.data.name + d.depth; });\r\n\r\n\t\t\t  // Remove exiting nodes.\r\n\t\t\t  trail.exit().remove();\r\n\r\n\t\t\t  // Add breadcrumb and label for entering nodes.\r\n\t\t\t  var entering = trail.enter().append(\"svg:g\");\r\n\r\n\t\t\t  entering.append(\"svg:polygon\")\r\n\t\t\t      .attr(\"points\", breadcrumbPoints)\r\n\t\t\t      .style(\"fill\", function(d) { return colors[d.data.name]; });\r\n\r\n\t\t\t  entering.append(\"svg:text\")\r\n\t\t\t      .attr(\"x\", (b.w + b.t) / 2)\r\n\t\t\t      .attr(\"y\", b.h / 2)\r\n\t\t\t      .attr(\"dy\", \"0.35em\")\r\n\t\t\t      .attr(\"text-anchor\", \"middle\")\r\n\t\t\t      .text(function(d) { return d.data.name; });\r\n\r\n\t\t\t  // Merge enter and update selections; set position for all nodes.\r\n\t\t\t  entering.merge(trail).attr(\"transform\", function(d, i) {\r\n\t\t\t    return \"translate(\" + i * (b.w + b.s) + \", 0)\";\r\n\t\t\t  });\r\n\r\n\t\t\t  // Now move and update the percentage at the end.\r\n\t\t\t  d3.select(\"#trail\").select(\"#endlabel\")\r\n\t\t\t      .attr(\"x\", (nodeArray.length + 0.5) * (b.w + b.s))\r\n\t\t\t      .attr(\"y\", b.h / 2)\r\n\t\t\t      .attr(\"dy\", \"0.35em\")\r\n\t\t\t      .attr(\"text-anchor\", \"middle\")\r\n\t\t\t      .text(percentageString);\r\n\r\n\t\t\t  // Make the breadcrumb trail visible, if it's hidden.\r\n\t\t\t  d3.select(\"#trail\")\r\n\t\t\t      .style(\"visibility\", \"\");\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction drawLegend() {\r\n\r\n\t\t\t  // Dimensions of legend item: width, height, spacing, radius of rounded rect.\r\n\t\t\t  var li = {\r\n\t\t\t    w: 75, h: 30, s: 3, r: 3\r\n\t\t\t  };\r\n\r\n\t\t\t  var legend = d3.select(\"#legend\").append(\"svg:svg\")\r\n\t\t\t      .attr(\"width\", li.w)\r\n\t\t\t      .attr(\"height\", d3.keys(colors).length * (li.h + li.s));\r\n\r\n\t\t\t  var g = legend.selectAll(\"g\")\r\n\t\t\t      .data(d3.entries(colors))\r\n\t\t\t      .enter().append(\"svg:g\")\r\n\t\t\t      .attr(\"transform\", function(d, i) {\r\n\t\t\t              return \"translate(0,\" + i * (li.h + li.s) + \")\";\r\n\t\t\t           });\r\n\r\n\t\t\t  g.append(\"svg:rect\")\r\n\t\t\t      .attr(\"rx\", li.r)\r\n\t\t\t      .attr(\"ry\", li.r)\r\n\t\t\t      .attr(\"width\", li.w)\r\n\t\t\t      .attr(\"height\", li.h)\r\n\t\t\t      .style(\"fill\", function(d) { return d.value; });\r\n\r\n\t\t\t  g.append(\"svg:text\")\r\n\t\t\t      .attr(\"x\", li.w / 2)\r\n\t\t\t      .attr(\"y\", li.h / 2)\r\n\t\t\t      .attr(\"dy\", \"0.35em\")\r\n\t\t\t      .attr(\"text-anchor\", \"middle\")\r\n\t\t\t      .text(function(d) { return d.key; });\r\n\t\t\t}\r\n\r\n\t\t\tfunction toggleLegend() {\r\n\t\t\t  var legend = d3.select(\"#legend\");\r\n\t\t\t  if (legend.style(\"visibility\") === \"hidden\") {\r\n\t\t\t    legend.style(\"visibility\", \"\");\r\n\t\t\t  } else {\r\n\t\t\t    legend.style(\"visibility\", \"hidden\");\r\n\t\t\t  }\r\n\t\t\t}\r\n\r\n\t\t\t// Take a 2-column CSV and transform it into a hierarchical structure suitable\r\n\t\t\t// for a partition layout. The first column is a sequence of step names, from\r\n\t\t\t// root to leaf, separated by hyphens. The second column is a count of how \r\n\t\t\t// often that sequence occurred.\r\n\t\t\tfunction buildHierarchy(csv) {\r\n\t\t\t  var root = {\"name\": \"root\", \"children\": []};\r\n\t\t\t  for (var i = 0; i < csv.length; i++) {\r\n\t\t\t    var sequence = csv[i][0];\r\n\t\t\t    var size = +csv[i][1];\r\n\t\t\t    if (isNaN(size)) { // e.g. if this is a header row\r\n\t\t\t      continue;\r\n\t\t\t    }\r\n\t\t\t    var parts = sequence.split(\"-\");\r\n\t\t\t    var currentNode = root;\r\n\t\t\t    for (var j = 0; j < parts.length; j++) {\r\n\t\t\t      var children = currentNode[\"children\"];\r\n\t\t\t      var nodeName = parts[j];\r\n\t\t\t      var childNode;\r\n\t\t\t      if (j + 1 < parts.length) {\r\n\t\t\t   // Not yet at the end of the sequence; move down the tree.\r\n\t\t\t \tvar foundChild = false;\r\n\t\t\t \tfor (var k = 0; k < children.length; k++) {\r\n\t\t\t \t  if (children[k][\"name\"] === nodeName) {\r\n\t\t\t \t    childNode = children[k];\r\n\t\t\t \t    foundChild = true;\r\n\t\t\t \t    break;\r\n\t\t\t \t  }\r\n\t\t\t \t}\r\n\t\t\t  // If we don't already have a child node for this branch, create it.\r\n\t\t\t \tif (!foundChild) {\r\n\t\t\t \t  childNode = {\"name\": nodeName, \"children\": []};\r\n\t\t\t \t  children.push(childNode);\r\n\t\t\t \t}\r\n\t\t\t \tcurrentNode = childNode;\r\n\t\t\t      } else {\r\n\t\t\t \t// Reached the end of the sequence; create a leaf node.\r\n\t\t\t \tchildNode = {\"name\": nodeName, \"size\": size};\r\n\t\t\t \tchildren.push(childNode);\r\n\t\t\t      }\r\n\t\t\t    }\r\n\t\t\t  }\r\n\t\t\t  return root;\r\n\t\t\t};\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div id=\"main\">\r\n\t\t\t\t\t<div id=\"sequence\"></div>\r\n\t\t\t\t      <div id=\"chart\">\r\n\t\t\t\t        <div id=\"explanation\">\r\n\t\t\t\t          <span id=\"percentage\"></span><br/>\r\n\t\t\t\t          of 2017 team Salary\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t\t</div>\r\n\t\t\t    <div id=\"sidebar\">\r\n\t\t\t      <input type=\"checkbox\" id=\"togglelegend\"></input> Legend<br/>\r\n\t\t\t      <div id=\"legend\"></div>\r\n\t\t\t    </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default Sunburst;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport packers from './Utils/packers.csv';\r\nimport bears from './Utils/bears.csv';\r\nimport chargers from './Utils/chargers.csv';\r\n\r\nclass Chart extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.createChart();\r\n\t}\r\n\r\n\tcreateChart() {\r\n\t\t  var svg = d3.select(\"svg\"),\r\n        margin = {top: 20, right: 20, bottom: 30, left: 40},\r\n        width = +svg.attr(\"width\") - margin.left - margin.right,\r\n        height = +svg.attr(\"height\") - margin.top - margin.bottom,\r\n        g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    // The scale spacing the groups:\r\n    var x0 = d3.scaleBand()\r\n        .rangeRound([0, width])\r\n        .paddingInner(0.1);\r\n\r\n    // The scale for spacing each group's bar:\r\n    var x1 = d3.scaleBand()\r\n        .padding(0.05);\r\n\r\n    var y = d3.scaleLinear()\r\n        .rangeRound([height, 0]);\r\n\r\n    var z = d3.scaleOrdinal()\r\n        .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\r\n\r\n    const teamRef = {\r\n    \t\"packers\": packers,\r\n    \t\"bears\": bears,\r\n    \t\"chargers\": chargers\r\n    }\r\n    \r\n    d3.csv(teamRef[this.props.team], function(d, i, columns) {\r\n        for (var i = 1, n = columns.length; i < n; ++i) d[columns[i]] = +d[columns[i]];\r\n        return d;\r\n    }).then(function(data) {\r\n        console.log(data);\r\n\r\n        var keys = data.columns.slice(1);\r\n\r\n        // console.log('keys');\r\n        // console.log(keys);\r\n        x0.domain(data.map(function(d) { return d.Year; }));\r\n        x1.domain(keys).rangeRound([0, x0.bandwidth()]);\r\n        y.domain([0, d3.max(data, function(d) { return d3.max(keys, function(key) { return d[key]; }); })]).nice();\r\n\r\n        g.append(\"g\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .enter().append(\"g\")\r\n            .attr(\"class\",\"bar\")\r\n            .attr(\"transform\", function(d) { return \"translate(\" + x0(d.Year) + \",0)\"; })\r\n            .selectAll(\"rect\")\r\n            .data(function(d) { return keys.map(function(key) { return {key: key, value: d[key]}; }); })\r\n            .enter().append(\"rect\")\r\n            .attr(\"x\", function(d) { return x1(d.key); })\r\n            .attr(\"y\", function(d) { return y(d.value); })\r\n            .attr(\"width\", x1.bandwidth())\r\n            .attr(\"height\", function(d) { return height - y(d.value); })\r\n            .attr(\"fill\", function(d) { return z(d.key); });\r\n\r\n        g.append(\"g\")\r\n            .attr(\"class\", \"axis\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(d3.axisBottom(x0));\r\n\r\n        g.append(\"g\")\r\n            .attr(\"class\", \"y axis\")\r\n            .call(d3.axisLeft(y).ticks(null, \"s\"))\r\n            .append(\"text\")\r\n            .attr(\"x\", 2)\r\n            .attr(\"y\", y(y.ticks().pop()) + 0.5)\r\n            .attr(\"dy\", \"0.32em\")\r\n            .attr(\"fill\", \"#000\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .attr(\"text-anchor\", \"start\")\r\n            .text(\"Population\");\r\n\r\n        var legend = g.append(\"g\")\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", 10)\r\n            .attr(\"text-anchor\", \"end\")\r\n            .selectAll(\"g\")\r\n            .data(keys.slice().reverse())\r\n            .enter().append(\"g\")\r\n            .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\r\n\r\n        legend.append(\"rect\")\r\n            .attr(\"x\", width - 17)\r\n            .attr(\"width\", 15)\r\n            .attr(\"height\", 15)\r\n            .attr(\"fill\", z)\r\n            .attr(\"stroke\", z)\r\n            .attr(\"stroke-width\",2)\r\n            .on(\"click\",function(d) { update(d) });\r\n\r\n        legend.append(\"text\")\r\n            .attr(\"x\", width - 24)\r\n            .attr(\"y\", 9.5)\r\n            .attr(\"dy\", \"0.32em\")\r\n            .text(function(d) { return d; });\r\n\r\n        var filtered = [];\r\n\r\n        ////\r\n        //// Update and transition on click:\r\n        ////\r\n\r\n        function update(d) {\r\n\r\n            //\r\n            // Update the array to filter the chart by:\r\n            //\r\n\r\n            // add the clicked key if not included:\r\n            if (filtered.indexOf(d) == -1) {\r\n                filtered.push(d);\r\n                // if all bars are un-checked, reset:\r\n                if(filtered.length == keys.length) filtered = [];\r\n            }\r\n            // otherwise remove it:\r\n            else {\r\n                filtered.splice(filtered.indexOf(d), 1);\r\n            }\r\n\r\n            //\r\n            // Update the scales for each group(/states)'s items:\r\n            //\r\n            var newKeys = [];\r\n            keys.forEach(function(d) {\r\n                if (filtered.indexOf(d) == -1 ) {\r\n                    newKeys.push(d);\r\n                }\r\n            })\r\n            x1.domain(newKeys).rangeRound([0, x0.bandwidth()]);\r\n            y.domain([0, d3.max(data, function(d) { return d3.max(keys, function(key) { if (filtered.indexOf(key) == -1) return d[key]; }); })]).nice();\r\n\r\n            // update the y axis:\r\n            svg.select(\".y\")\r\n                .transition()\r\n                .call(d3.axisLeft(y).ticks(null, \"s\"))\r\n                .duration(500);\r\n\r\n\r\n            //\r\n            // Filter out the bands that need to be hidden:\r\n            //\r\n            var bars = svg.selectAll(\".bar\").selectAll(\"rect\")\r\n                .data(function(d) { return keys.map(function(key) { return {key: key, value: d[key]}; }); })\r\n\r\n            bars.filter(function(d) {\r\n                    return filtered.indexOf(d.key) > -1;\r\n                })\r\n                .transition()\r\n                .attr(\"x\", function(d) {\r\n                    return (+d3.select(this).attr(\"x\")) + (+d3.select(this).attr(\"width\"))/2;\r\n                })\r\n                .attr(\"height\",0)\r\n                .attr(\"width\",0)\r\n                .attr(\"y\", function(d) { return height; })\r\n                .duration(500);\r\n\r\n            //\r\n            // Adjust the remaining bars:\r\n            //\r\n            bars.filter(function(d) {\r\n                    return filtered.indexOf(d.key) == -1;\r\n                })\r\n                .transition()\r\n                .attr(\"x\", function(d) { return x1(d.key); })\r\n                .attr(\"y\", function(d) { return y(d.value); })\r\n                .attr(\"height\", function(d) { return height - y(d.value); })\r\n                .attr(\"width\", x1.bandwidth())\r\n                .attr(\"fill\", function(d) { return z(d.key); })\r\n                .duration(500);\r\n\r\n\r\n            // update legend:\r\n            legend.selectAll(\"rect\")\r\n                .transition()\r\n                .attr(\"fill\",function(d) {\r\n                    if (filtered.length) {\r\n                        if (filtered.indexOf(d) == -1) {\r\n                            return z(d);\r\n                        }\r\n                        else {\r\n                            return \"white\";\r\n                        }\r\n                    }\r\n                    else {\r\n                        return z(d);\r\n                    }\r\n                })\r\n                .duration(100);\r\n\r\n\r\n        }\r\n\r\n    });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{console.log(this.props.team)}\r\n\t\t\t\t<svg width=\"960\" height=\"500\"></svg>\r\n\t\t\t\t<a onClick={this.props.onBack} className=\"col-xs-1 pt3 black b navbar-left\">Back</a>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Chart;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Homepage from './Homepage.js';\nimport Sunburst from './Sunburst.js';\nimport Chart from './Chart.js';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      route: 0,\n      team: 'hold',\n      year: \"2017\"\n    }\n  }\n\n  onRouteChange = (parameter, event) => {\n    console.log(parameter)\n    this.setState({route: 1})\n    this.setState({team: parameter})\n  }\n\n  onBack = (event) => {\n    this.setState({route: 0})\n    this.setState({team: 'hold'})\n  }\n\n  onYearChange = (event, parameter) => {\n    console.log(this.state.year)\n    if (this.state.year == \"2017\") {\n      this.setState({year: \"2018\"})\n    } else {\n      this.setState({year: \"2017\"})\n    }\n  }\n\n  render() {\n\n    const displayPage = [<Homepage onRouteChange={this.onRouteChange}/>, <Chart onBack={this.onBack} team={this.state.team}/>]\n\n\n    return (\n      <div>\n        {displayPage[this.state.route]}\n\n          <p onClick={this.onYearChange}>Click to change year</p>\n\n        <Sunburst year={this.state.year}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}